name: Build, Push, and Update GitOps

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'

env:
  # GHCR 주소와 이미지 이름을 변수로 관리
  GHCR_REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository_owner }}/kubewatch-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository_owner }}/kubewatch-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      # 다음 job에서 사용할 이미지 태그(commit SHA)를 출력으로 지정
      image_tag: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }} # GHCR은 GITHUB_TOKEN 사용이 표준

      - name: Extract commit SHA as image tag
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          # 커밋 해시 태그와 'latest' 태그를 동시에 푸시합니다.
          tags: |
            ${{ env.GHCR_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.GHCR_REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v5 # <-- 'uses' 줄의 들여쓰기를 수정했습니다.
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          build-args: VITE_SOCKET_URL=http://kubewatch-backend-svc:5000
          # 커밋 해시 태그와 'latest' 태그를 동시에 푸시합니다.
          tags: |
            ${{ env.GHCR_REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.GHCR_REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest

  update-gitops:
    runs-on: ubuntu-latest
    # build job이 성공해야만 실행됨
    needs: build
    permissions: # contents: write 권한 필요
      contents: write

    steps:
      - name: Checkout GitOps Configs repository
        uses: actions/checkout@v4
        with:
          repository: devopslabs-jcg/k8s-gitops-configs
          token: ${{ secrets.GHCR_TOKEN }} # 다른 리포지토리에 push하기 위한 PAT

      - name: Update backend image tag in Helm values
        run: |
          # sed 명령어: backend.image.tag 라인을 찾아 태그를 'latest'로 고정
          # needs.build.outputs.image_tag 변수 대신 'latest' 사용
          sed -i "s|tag:.*# backend-tag|tag: latest # backend-tag|g" k8s-app-helm-charts/kubewatch/values.yaml

      - name: Update frontend image tag in Helm values
        run: |
          # sed 명령어: frontend.image.tag 라인을 찾아 태그를 'latest'로 고정
          # needs.build.outputs.image_tag 변수 대신 'latest' 사용
          sed -i "s|tag:.*# frontend-tag|tag: latest # frontend-tag|g" k8s-app-helm-charts/kubewatch/values.yaml

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s-app-helm-charts/kubewatch/values.yaml
          # 변경 사항이 있을 때만 커밋
          if ! git diff --staged --quiet; then
            git commit -m "Update KubeWatch image tag to latest [skip ci]"
            git push
          else
            echo "No changes to commit in values.yaml"
          fi
