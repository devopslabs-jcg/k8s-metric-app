# .github/workflows/deploy.yml (k8s-metric-app 리포지토리)
name: Build and Deploy Metric App

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # --- 이 permissions 블록을 추가합니다! ---
    permissions:
      contents: write # GitOps 리포지토리에 커밋/푸시하기 위한 권한 (아래 Checkout GitOps Configs repository 단계에서 사용)
      packages: write # GHCR에 이미지를 푸시하기 위한 권한 (가장 중요!)
                      # GITHUB_TOKEN을 사용할 때 organization package denied 오류 해결
    # ----------------------------------------

    steps:
      - name: Checkout application code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # <--- GITHUB_TOKEN 그대로 사용

      - name: Set image tag
        id: vars
        run: echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Build and push Docker image to GHCR
        run: |
          FULL_IMAGE_NAME="ghcr.io/${{ github.repository }}"
          docker build -t $FULL_IMAGE_NAME:$IMAGE_TAG .
          docker push $FULL_IMAGE_NAME:$IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Checkout GitOps Configs repository
        uses: actions/checkout@v4
        with:
          repository: devopslabs-jcg/k8s-gitops-configs
          path: k8s-gitops-configs
          # GITHUB_TOKEN으로도 이 리포에 푸시할 수 있도록 권한을 위에서 contents: write 로 주었습니다.
          # ACTION_PUBLIC_TOKEN (PAT)을 계속 사용해도 무방합니다.
          # 하지만 GITHUB_TOKEN만을 사용하고 싶으시다면 여기도 GITHUB_TOKEN으로 변경해야 합니다.
          # 토큰을 하나로 통일하려면:
          token: ${{ secrets.GITHUB_TOKEN }} # <--- 만약 GitOps repo 푸시도 GITHUB_TOKEN으로 하려면 변경
                                          # 아니면 기존 ${{ secrets.ACTION_PUBLIC_TOKEN }} 유지
                                          # (ACTION_PUBLIC_TOKEN이 k8s-gitops-configs에 쓰기 권한이 있어야 함)

      - name: Update image tag in Helm values and Push
        run: |
          cd k8s-gitops-configs
          sed -i "s|tag: .*|tag: ${{ env.IMAGE_TAG }}|g" kubernetes-app-charts/metric-app/values.yaml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kubernetes-app-charts/metric-app/values.yaml
          git commit -m "Update metric-app image tag to ${{ env.IMAGE_TAG }} [skip ci]"
          git push
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
