name: CI - Build and Push KubeWatch Docker Images

on:
  push:
    branches:
      - main
    # [개선] 특정 폴더에 변경이 있을 때만 실행되도록 최적화
    paths:
      - 'backend/**'
      - 'frontend/**'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    # [개선] 백엔드 코드가 변경되었을 때만 이 job을 실행
    if: github.event_name == 'push' && contains(toJson(github.event.commits), 'backend/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          # [수정] 빌드 컨텍스트를 backend 폴더로 지정
          context: ./backend
          # [수정] Dockerfile의 위치를 명시
          file: ./backend/Dockerfile
          push: true
          # [수정] 이미지 이름을 values.yaml과 일치시킴
          tags: ghcr.io/devopslabs-jcg/kubewatch-backend:latest

  build-frontend:
    runs-on: ubuntu-latest
    # [개선] 프론트엔드 코드가 변경되었을 때만 이 job을 실행
    if: github.event_name == 'push' && contains(toJson(github.event.commits), 'frontend/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          # [수정] 빌드 컨텍스트를 frontend 폴더로 지정
          context: ./frontend
          # [수정] 프로덕션용 Dockerfile 위치를 명시
          file: ./frontend/Dockerfile.prod
          push: true
          # [수정] 이미지 이름을 values.yaml과 일치시킴
          tags: ghcr.io/devopslabs-jcg/kubewatch-frontend:latest
